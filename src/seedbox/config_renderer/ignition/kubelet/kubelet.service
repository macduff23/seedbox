[Unit]
Description=Kubelet via Hyperkube ACI
Wants=flanneld.service

[Service]
Environment="KUBELET_ACI={{ config.k8s_hyperkube_image }}"
Environment="KUBELET_IMAGE_TAG={{ cluster.k8s_hyperkube_tag }}"
Environment="RKT_RUN_ARGS=--uuid-file-save=/var/run/kubelet-pod.uuid \
  --volume resolv,kind=host,source=/etc/resolv.conf \
  --mount volume=resolv,target=/etc/resolv.conf \
  --volume ssl-cluster-credentials,kind=host,source={{ config.cluster_credentials_path }},readOnly=true \
  --mount volume=ssl-cluster-credentials,target={{ config.cluster_credentials_path }} \
  --volume var-log,kind=host,source=/var/log \
  --mount volume=var-log,target=/var/log \
  {% if cluster.k8s_cni -%}
  --volume var-lib-cni,kind=host,source=/var/lib/cni \
  --mount volume=var-lib-cni,target=/var/lib/cni \
  {% endif -%}
  --volume modprobe,kind=host,source=/usr/sbin/modprobe \
  --mount volume=modprobe,target=/usr/sbin/modprobe \
  --volume lib-modules,kind=host,source=/lib/modules \
  --mount volume=lib-modules,target=/lib/modules \
  --volume docker-config,kind=host,source=/root/.docker,readOnly=true \
  --mount volume=docker-config,target=/.docker \
  "

ExecStartPre=/usr/bin/mkdir -p {{ config.k8s_manifests_path }}
ExecStartPre=/usr/bin/mkdir -p /var/log/containers
{% if cluster.k8s_cni -%}
ExecStartPre=/usr/bin/mkdir -p /var/lib/cni
{% endif -%}
ExecStartPre=/usr/bin/systemctl is-active flanneld.service
ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid

# --client-ca-file and --anonymous-auth arguments are for apiserver -> kubelet communication
ExecStart=/usr/lib/coreos/kubelet-wrapper \
  --kubeconfig={{ config.k8s_kubeconfig_path }} \
  --require-kubeconfig \
  --client-ca-file={{ config.ca_cert_path }} \
  --anonymous-auth=false \
  {% if cluster.k8s_cni -%}
  --cni-conf-dir={{ config.k8s_cni_conf_path }} \
  --network-plugin=cni \
  {% endif -%}
  --pod-manifest-path={{ config.k8s_manifests_path }} \
  --allow-privileged=true \
  --hostname-override={{ node.fqdn }} \
  {% if node.is_k8s_master -%}
  --node-labels=node-role.kubernetes.io/master \
  {% else -%}
  --node-labels=node-role.kubernetes.io/node \
  {% endif -%}
  --cluster-dns={{ cluster.k8s_dns_service_ip }} \
  --cluster-domain={{ config.k8s_cluster_domain }} \
  {% if node.is_k8s_schedulable -%}
  --register-schedulable=true \
  {% else %}
  --register-schedulable=false \
  {% endif -%}
  \

ExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid

Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
